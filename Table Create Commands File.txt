Users Table - 
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(255) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    Role ENUM('PM', 'GL', 'PL', 'TM', 'GM') NOT NULL
);

Projects Table - 
CREATE TABLE Projects (
    ProjectID INT PRIMARY KEY AUTO_INCREMENT,
    ProjectCode VARCHAR(255) NOT NULL UNIQUE,
    ProjectName VARCHAR(255) NOT NULL,
    StartDate DATE NOT NULL,
    PLUserID INT,
    GLUserID INT,
    FOREIGN KEY (PLUserID) REFERENCES Users(UserID),
    FOREIGN KEY (GLUserID) REFERENCES Users(UserID)
);

Documents Table - 
CREATE TABLE Documents (
    DocumentID INT PRIMARY KEY AUTO_INCREMENT,
    DocumentName VARCHAR(255) NOT NULL,
    DueDate DATE NOT NULL,
    CompletionStatus ENUM('Pending', 'Completed') NOT NULL,
    ProjectID INT,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID)
);

Modules Table:
CREATE TABLE Modules (
    ModuleID INT PRIMARY KEY AUTO_INCREMENT,
    ModuleName VARCHAR(255) NOT NULL,
    CompletionStatus ENUM('Pending', 'Completed') NOT NULL,
    ProjectID INT,
    AssignedTMUserID INT,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID),
    FOREIGN KEY (AssignedTMUserID) REFERENCES Users(UserID)
);

ProjectWindUp Table:
CREATE TABLE ProjectWindUp (
    WindUpID INT PRIMARY KEY AUTO_INCREMENT,
    ProjectID INT,
    Discussions TEXT,
    StandardsChecked BOOLEAN,
    ClientReleased BOOLEAN,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ProjectID)
);

Alter Table Query:
ALTER TABLE Projects
ADD COLUMN PMUserID INT;
ALTER TABLE Projects
ADD CONSTRAINT FK_Projects_PMUserID
FOREIGN KEY (PMUserID)
REFERENCES Users(UserID);


Notifications Table:
CREATE TABLE Notifications (
    NotificationID INT AUTO_INCREMENT,
    Message TEXT NOT NULL,
    UserID INT,
    PRIMARY KEY(NotificationID),
    FOREIGN KEY(UserID) REFERENCES Users(UserID)
);

Project User Table:
CREATE TABLE ProjectUser (
    ProjectID INT,
    UserID INT,
    IsReleased BOOLEAN DEFAULT FALSE,
    FOREIGN KEY(ProjectID) REFERENCES Projects(ProjectID),
    FOREIGN KEY(UserID) REFERENCES Users(UserID)
);


